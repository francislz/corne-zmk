/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        behaviors {
                td_esc: tap_dance_mod_tap {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp Q>, <&kp ESC>;
                };
                td_tab: tap_dance_mod_tap {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp A>, <&kp TAB>;
                };
                td0: tap_dance_mod_tap {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&mo 2>, <&lt 1>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &td_esc        &kp W   &kp E   &kp R   &kp T           &kp Y &kp U  &kp I     &kp O   &kp P    
   &td_tab      &kp S   &kp D   &kp F   &kp G           &kp H &kp J  &kp K     &kp L   &kp SEMI
   &mt LSFHIT Z &kp X   &kp C   &kp V   &kp B           &kp N &kp M  &kp COMMA &kp DOT &mt RSHIFT FSLH
                        &kp LCTRL &kp SPACE &kp LGUI    &kp BSPC &kp RET &td0
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR
   &trans   &trans &trans   &trans   &trans             &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH
   &trans   &trans &trans   &trans   &trans             &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE
                   &trans   &trans   &lt 0              &trans    &trans    &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans       &trans       &trans       &trans       &trans         &kp N6   &kp N7   &kp N8 &kp N9   &kp N0 
   &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &studio_unlock &kp N1   &kp N2   &kp N3 &kp N4   &N5
   &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans   &trans
                             &trans       &trans       &trans         &trans   &trans   &trans
                        >;
                };
        };

        /* Select the transform for the keyboard */
        chosen {
                zmk,physical-layout = &foostan_corne_5col_layout;
        };
};
