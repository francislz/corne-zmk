/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#include "constants.h"
#define HOST_OS MAC

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"
// #include "../layouts/canadian-multilingual-standard.dtsi"
#include "../behaviors/soft-off.dtsi"
#include "../behaviors/combos_36.dtsi"
#include "../behaviors/hold-tap.dtsi"
#include "../behaviors/macros.dtsi"
#include "../behaviors/mod-morph.dtsi"
#include "../behaviors/mouse.dtsi"

ZMK_LAYER(QWERTY,
// ╭───────────┬───────────┬───────────┬────────────┬────────────╮ ╭───────────┬─────────────┬─────────────┬────────────┬────────────╮
     &kp Q       &kp W       &kp E       &kp R        &kp T          &kp Y       &kp U         &kp I         &kp O        &kp P
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
     &hml GL A   &hml AL S   &hml CL D   &hml SL F    &kp G          &kp H       &hmr SR J     &hmr CL K     &hmr AR L   &hmr GL SEMI
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
     &kp Z       &kp X       &kp C       &kp V        &kp B          &kp N       &kp M         &kp COMMA     &kp DOT      &to QAC
// ╰───────────┴───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┴────────────╯
                             &mo 1        &kp LGUI    &kp SPACE      &kp RET     &kp RSHIFT    &mo 3
//                         ╰───────────┴────────────┴────────────╯ ╰───────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Symbols,
// ╭───────────┬───────────┬───────────┬────────────┬────────────╮ ╭───────────┬─────────────┬─────────────┬────────────┬────────────╮
     &kp HASH    &kp AT      &kp LBRAC   &kp RBRAC    &kp PLUS       XXX         &kp TILDS     &GRA          &kp DLLR     XXX
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
    &slsh_bslsh &dash_tilde  &kp LPAR   &hml SL RPAR  &kp EQUAL      &CAR        &kp QUEST     &kp EXCL      &kp AMPS     &kp PIP
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
     &kp STAR    &kp PRCNT   &kp LBKET   &kp RBKET    &kp UNDER      XXX         &kp LETHAN    &kp GRTHAN    &kp LAQUO    &kp RAQUO
// ╰───────────┴───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┴────────────╯
                             ___         ___          ___            ___         ___           ___
//                         ╰───────────┴────────────┴────────────╯ ╰───────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Numbers,
// ╭───────────┬───────────┬───────────┬────────────┬────────────╮ ╭───────────┬─────────────┬─────────────┬────────────┬────────────╮
     &kp F1      &kp F2      &kp F3      &kp F4       &kp MATH_PM   &kp MATH_1_4 &kp N7        &kp N8        &kp N9       &multi_div
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
     &kp F5      &kp F6      &kp F7      &hml SL F8   &kp DEG       &kp MATH_1_2 &kp N4        &kp N5        &kp N6       &plus_minus
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
     &kp F9      &kp F10     &kp F11     &kp F12    &kp MATH_MICRO  &kp MATH_3_4 &kp N1        &kp N2        &kp N3       &comma_dot
// ╰───────────┴───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┴────────────╯
                             ___         ___          ___            ___         &kp N0        &kp DOT
//                         ╰───────────┴────────────┴────────────╯ ╰───────────┴─────────────┴─────────────╯
)

ZMK_LAYER(Nav,
// ╭───────────┬───────────┬───────────┬────────────┬────────────╮ ╭───────────┬─────────────┬─────────────┬────────────┬────────────╮
    &out OUT_TOG XXX         XXX         XXX          &bt BT_CLR     XXX         XXX           XXX           XXX          XXX
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
     &sk LGUI    &kp C_PREV  &kp C_PP    &kp C_NEXT   XXX            &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT    &kp INS
// ├───────────┼───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┼────────────┤
    &bt BT_PRV   &bt BT_NXT &kp C_VOL_DN &kp C_VOL_UP XXX            &kp HOME    &kp PG_DN     &kp PG_UP     &kp END      &kp SLCK
// ╰───────────┴───────────┼───────────┼────────────┼────────────┤ ├───────────┼─────────────┼─────────────┼────────────┴────────────╯
                             ___         ___          ___            ___         ___           ___
//                         ╰───────────┴────────────┴────────────╯ ╰───────────┴─────────────┴─────────────╯
)

ZMK_APPLY_MATRIX_TRANSFORM(five_column_transform)

// / {
//         keymap {
//                 compatible = "zmk,keymap";
// 
//                 default_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
// //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
//                         bindings = <
//    &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//    &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
//                   &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
//                         >;
//                 };
//                 lower_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
// //                    | GUI |     | SPC |   | ENT |     | ALT |
//                         bindings = <
//    &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//    &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                     &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
//                         >;
//                 };
// 
//                 raise_layer {
// // -----------------------------------------------------------------------------------------
// // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
// //                    | GUI |     | SPC |   | ENT |     | ALT |
//                         bindings = <
//    &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
//    &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
//    &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
//                              &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
//                         >;
//                 };
//         };
// };
